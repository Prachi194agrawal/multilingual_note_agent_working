{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Cisco Packet Tracer 8.2.2\\\\saves\\\\AI_Agents\\\\multilingual_note_agent\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UploadForm from '../components/UploadForm';\nimport TranscriptionList from '../components/TranscriptionList';\nimport TranscriptionView from '../components/TranscriptionView';\nimport SearchBar from '../components/SearchBar';\nimport { getTranscriptions, getTranscription, searchTranscriptions } from '../utils/api';\nimport './HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [selectedTranscription, setSelectedTranscription] = useState(null);\n  const [selectedId, setSelectedId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchTranscriptions = async () => {\n    try {\n      setIsLoading(true);\n      const data = await getTranscriptions();\n      setTranscriptions(data);\n      setIsLoading(false);\n    } catch (error) {\n      setError('Failed to load transcriptions');\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTranscriptions();\n  }, []);\n  const handleTranscriptionSelect = async id => {\n    try {\n      setSelectedId(id);\n      const data = await getTranscription(id);\n      setSelectedTranscription(data);\n    } catch (error) {\n      setError('Failed to load transcription details');\n    }\n  };\n  const handleSearch = async query => {\n    if (!query.trim()) {\n      fetchTranscriptions();\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const results = await searchTranscriptions(query);\n      setTranscriptions(results);\n      setIsLoading(false);\n      if (results.length > 0 && (!selectedId || !results.some(t => t.id === selectedId))) {\n        handleTranscriptionSelect(results[0].id);\n      }\n    } catch (error) {\n      setError('Search failed');\n      setIsLoading(false);\n    }\n  };\n  const handleUploadSuccess = async data => {\n    await fetchTranscriptions();\n    handleTranscriptionSelect(data.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Multilingual Meeting Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(UploadForm, {\n          onUploadSuccess: handleUploadSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading\",\n          children: \"Loading transcriptions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TranscriptionList, {\n          transcriptions: transcriptions,\n          onSelect: handleTranscriptionSelect,\n          selectedId: selectedId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), selectedTranscription ? /*#__PURE__*/_jsxDEV(TranscriptionView, {\n          transcription: selectedTranscription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome to Multilingual Meeting Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload an audio recording or select an existing transcription to get started.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"16TQ6CFxkL2KaR8ljFjceJZiYkU=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","UploadForm","TranscriptionList","TranscriptionView","SearchBar","getTranscriptions","getTranscription","searchTranscriptions","jsxDEV","_jsxDEV","HomePage","_s","transcriptions","setTranscriptions","selectedTranscription","setSelectedTranscription","selectedId","setSelectedId","isLoading","setIsLoading","error","setError","fetchTranscriptions","data","handleTranscriptionSelect","id","handleSearch","query","trim","results","length","some","t","handleUploadSuccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onUploadSuccess","onSelect","transcription","_c","$RefreshReg$"],"sources":["C:/Users/asus/Cisco Packet Tracer 8.2.2/saves/AI_Agents/multilingual_note_agent/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport UploadForm from '../components/UploadForm';\r\nimport TranscriptionList from '../components/TranscriptionList';\r\nimport TranscriptionView from '../components/TranscriptionView';\r\nimport SearchBar from '../components/SearchBar';\r\nimport { getTranscriptions, getTranscription, searchTranscriptions } from '../utils/api';\r\nimport './HomePage.css';\r\n\r\nconst HomePage = () => {\r\n  const [transcriptions, setTranscriptions] = useState([]);\r\n  const [selectedTranscription, setSelectedTranscription] = useState(null);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchTranscriptions = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await getTranscriptions();\r\n      setTranscriptions(data);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setError('Failed to load transcriptions');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTranscriptions();\r\n  }, []);\r\n\r\n  const handleTranscriptionSelect = async (id) => {\r\n    try {\r\n      setSelectedId(id);\r\n      const data = await getTranscription(id);\r\n      setSelectedTranscription(data);\r\n    } catch (error) {\r\n      setError('Failed to load transcription details');\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    if (!query.trim()) {\r\n      fetchTranscriptions();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const results = await searchTranscriptions(query);\r\n      setTranscriptions(results);\r\n      setIsLoading(false);\r\n\r\n      if (results.length > 0 && (!selectedId || !results.some(t => t.id === selectedId))) {\r\n        handleTranscriptionSelect(results[0].id);\r\n      }\r\n    } catch (error) {\r\n      setError('Search failed');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUploadSuccess = async (data) => {\r\n    await fetchTranscriptions();\r\n    handleTranscriptionSelect(data.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <header className=\"app-header\">\r\n        <h1>Multilingual Meeting Notes</h1>\r\n        <SearchBar onSearch={handleSearch} />\r\n      </header>\r\n\r\n      <div className=\"main-content\">\r\n        <div className=\"sidebar\">\r\n          <UploadForm onUploadSuccess={handleUploadSuccess} />\r\n          {isLoading ? (\r\n            <p className=\"loading\">Loading transcriptions...</p>\r\n          ) : (\r\n            <TranscriptionList\r\n              transcriptions={transcriptions}\r\n              onSelect={handleTranscriptionSelect}\r\n              selectedId={selectedId}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"content-area\">\r\n          {error && <p className=\"error-message\">{error}</p>}\r\n          {selectedTranscription ? (\r\n            <TranscriptionView transcription={selectedTranscription} />\r\n          ) : (\r\n            <div className=\"empty-state\">\r\n              <h2>Welcome to Multilingual Meeting Notes</h2>\r\n              <p>Upload an audio recording or select an existing transcription to get started.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}